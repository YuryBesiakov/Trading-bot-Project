# Example configuration for the trading bot

# Alpaca API configuration.  Use the paper trading endpoint for
# development.  When running inside Docker you can set these via
# environment variables instead of hardcoding them here.  Values in
# environment variables will override those in this file.
alpaca:
  key_id: "YOUR_ALPACA_KEY_ID"
  secret_key: "YOUR_ALPACA_SECRET_KEY"
  base_url: "https://paper-api.alpaca.markets"

# List of symbols (tickers) to analyse and trade.  Use uppercase
# ticker symbols.  The bot will fetch historical data for all
# configured symbols.
symbols:
  - AAPL
  - MSFT
  - TSLA

# Data interval for fetching market data.  Accepts any pandas offset
# alias (e.g. '1H' for hourly, '30min' for 30 minute bars, '1D' for
daily).  The same interval is used both for live trading and
# backtesting.  Choose a frequency that matches your strategy.
interval: "1H"

# Backtesting parameters.  Only used when running backtests via
# backtester.py.  Dates should be provided in ISO format (YYYY-MM-DD).
backtest:
  start_date: "2023-01-01"
  end_date: "2024-01-01"
  initial_capital: 10000

# Trading rules and risk management.  `cash_allocation` controls the
# proportion of available capital allocated to each new position.
trade:
  cash_allocation: 0.1

# Strategy configuration.  Enable or disable specific patterns and
# indicators.  Thresholds for indicators such as RSI can also be
# provided.
strategy:
  patterns:
    bullish_engulfing: true
    bearish_engulfing: true
    gap_up: true
    gap_down: true
    hammer: true
    shooting_star: true
    double_top: false
    double_bottom: false
    triple_top: false
    triple_bottom: false
    cup_and_handle: false
    rising_wedge: false
    higher_lows: false
    lower_highs: false
  indicators:
    sma_50: true
    sma_100: true
    sma_200: true
    ema_50: false
    ema_100: false
    ema_200: false
    rsi: true
    volume: true
    support_resistance: false
    fibonacci: false
  thresholds:
    rsi_overbought: 70
    rsi_oversold: 30

# Notification settings.  Enable one or more channels to receive
# alerts about executed trades or errors.  Leave disabled if not
# required.
notifications:
  telegram:
    enabled: false
    bot_token: "YOUR_TELEGRAM_BOT_TOKEN"
    chat_id: "YOUR_TELEGRAM_CHAT_ID"
  slack:
    enabled: false
    token: "YOUR_SLACK_API_TOKEN"
    channel: "#alerts"
  email:
    enabled: false
    smtp_server: "smtp.example.com"
    smtp_port: 587
    username: "user@example.com"
    password: "EMAIL_PASSWORD"
    recipient: "recipient@example.com"

# Scheduling settings.  `interval` uses the same format as the
# topâ€‘level `interval` for data fetching.  `timezone` determines
# when the schedule triggers relative to your locale.
schedule:
  interval: "1H"
  timezone: "Europe/Berlin"